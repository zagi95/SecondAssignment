@page "/log"
@using BlazorClient.Models
@using BlazorClient.Services
@inject IJSRuntime JsRuntime
@inject UserService UserService
@inject LoginRecordService LoginRecordService
@inject NavigationManager Navigation

<h3><strong>LoginHistory</strong></h3>

<button type="button" @onclick="NavigateToUsers">Users</button>

<div>
    <div>
        <table>
            <thead>
            <tr>
                <th>Ime</th>
                <th>Prezime</th>
                <th>Vrijeme</th>
                <th>Browser</th>
            </tr>
            </thead>
            <tbody>
            @foreach (var loginRecord in _loginRecords)
            {
                <tr>
                    <td>@loginRecord.FirstName</td>
                    <td>@loginRecord.LastName</td>
                    <td>@loginRecord.LoginDate</td>
                    <td>@loginRecord.Browser</td>
                </tr>
            }
            </tbody>
        </table>

        <div>
            <button @onclick="ToggleUserLoginForm">Login</button>
        </div>

        @if (_showUserLoginForm)
        {
            <LoginForm OnLoginSuccess="HandleLoginSuccess" OnCancel="ToggleUserLoginForm" />
        }

    </div>
</div>

@code {
    private List<LoginRecord> _loginRecords = new List<LoginRecord>();
    private bool _showUserLoginForm = false;
    private UserLogin _userLogin = new UserLogin();
    
    protected override async Task OnInitializedAsync()
    {
        _loginRecords = await LoginRecordService.GetLoginRecords();
    }

    private void ToggleUserLoginForm()
    {
        _showUserLoginForm = !_showUserLoginForm;
    }

    private void NavigateToUsers()
    {
        Navigation.NavigateTo("/");
    }
    private async Task HandleLoginSuccess(LoginRecord record)
    {
        _loginRecords.Add(record);
    }
}