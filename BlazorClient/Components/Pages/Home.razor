@page "/"
@using BlazorClient.Models
@using BlazorClient.Services
@inject UserService UserService
@inject NavigationManager Navigation

<h3><strong>Korisnici:</strong></h3>

<div>
    <button @onclick="NavigateToLog">Log</button>
</div>
<div style="height: 80vh;">
    <div style="width: 50%;">
        <table>
            <thead>
            <tr>
                <th>Ime</th>
                <th>Prezime</th>
                <th>Broj logiranja</th>
                <th>Ispravi</th>
                <th>Obriši</th>
            </tr>
            </thead>
            <tbody>
            @foreach (var user in _users)
            {
                <tr>
                    <td>@user.FirstName</td>
                    <td>@user.LastName</td>
                    <td>@user.LoginCount</td>
                    <td><button @onclick="() => EditUser(user)">Ispravi</button></td>
                    <td><button @onclick="() => DeleteUser(user)">Obriši</button></td>
                </tr>
            }
            </tbody>
        </table>
        
    </div>
    @if (_showAddUserForm)
    {
        <AddUserForm OnUserAdded="OnUserAdded" OnCancel="ToggleAddUserForm" />
    }
    else
    {
        <button @onclick="ToggleAddUserForm">Dodaj novog korisnika</button>
    }
</div>


@code {
    private List<User> _users = new List<User>();
    private UserRegistration _userRegistration = new UserRegistration();
    private bool _showAddUserForm = false;

    protected override async Task OnInitializedAsync()
    {
        _users = await UserService.GetUsers();
    }

    private async Task<List<User>?> GetUsers()
    {
        return await UserService.GetUsers();
    }

    private void EditUser(User user)
    {
        Console.WriteLine($"Editing {user.FirstName} {user.LastName}");
    }

    private void DeleteUser(User user)
    {
        
        _users.Remove(user);
    }

    private async Task AddUser()
    {
        await UserService.AddUser(_userRegistration);
        StateHasChanged();
    }

    private void ToggleAddUserForm()
    {
        _showAddUserForm = !_showAddUserForm;
    }

    private void NavigateToLog()
    {
        Navigation.NavigateTo("/log");
    }
    private async Task OnUserAdded()
    {
        _users = await UserService.GetUsers();
        _showAddUserForm = false;
    }
}
